<Window x:Class="BetrayalApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BetrayalApp"
        xmlns:views="clr-namespace:BetrayalApp.Views"
        xmlns:viewModels="clr-namespace:BetrayalApp.ViewModels"
        DataContext="{Binding MainViewModel, Source={StaticResource ViewModelLocator}}"
        mc:Ignorable="d"
        Title="Betrayal Character Manager" Height="650" Width="1000"
        ResizeMode="CanResize"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}">
    <!--DataContext="{Binding RelativeSource={RelativeSource Self}}"-->
    
    <!-- Main Grid -->
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="100"/>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <!-- Character Management -->
        <TextBlock
            Text="Character Management"
            FontSize="20"
            FontWeight="Bold"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Margin="0 10"
            Grid.Row="0"
            Grid.Column="0" />
        
        <!-- Character Button Management -->
        <StackPanel
            Grid.Row="1"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom">
            
            <!-- Add / Edit Buttons -->
            <WrapPanel
                HorizontalAlignment="Center">
                <Button
                    Command="{Binding AddCharacterCommand}"
                    Content="Add"
                    ToolTip="Add a new player to the game!"
                    FontSize="15"
                    Margin="10 10"
                    Width="Auto"
                    VerticalAlignment="Center" />
                    <!--Click="AddCharacter_Click"-->

                <!--IsEnabled="{Binding SelectedCharacter, Converter={StaticResource ValueToBoolConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"-->
                <Button
                    Content="Edit"
                    ToolTip="Edit an existing player!"
                    Command="{Binding ShowEditPlayerCommand}"
                    Margin="10 10"
                    FontSize="15"
                    Width="Auto"
                    VerticalAlignment="Center" />
                    <!--Click="EditCharacter_Click"-->
            </WrapPanel>

            <!-- Remove / Overview Buttons -->
            <WrapPanel
                HorizontalAlignment="Center">
                <Button
                    Content="Remove"
                    Command="{Binding RemovePlayerCommand}"
                    ToolTip="Remove an existing player from the game!"
                    IsEnabled="{Binding SelectedCharacter, Converter={StaticResource ValueToBoolConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Margin="10 10"
                    FontSize="15"
                    Width="Auto"
                    VerticalAlignment="Center" />
                    <!--Click="RemovePlayer_Click"-->
                <Button
                    ToolTip="View all current players (1-6)!"
                    Command="{Binding ShowOverviewCommand}"
                    IsEnabled="{Binding AtLeastOneCharacter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Content="Overview"
                    FontSize="15"
                    Margin="10 10"
                    Width="Auto"
                    VerticalAlignment="Center" />
                    <!--Click="ViewOverview_Click"-->
            </WrapPanel>
            
        </StackPanel>
        
        <!-- Character Selection View -->
        <ListBox
            x:Name="Characters"
            Grid.Row="2"
            Grid.RowSpan="5"
            Grid.Column="0"
            Margin="5 5"
            DisplayMemberPath="Name"
            ItemsSource="{Binding AllCharacters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectedItem="{Binding SelectedCharacter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <TextBlock
            Text="Add a Character!"
            Grid.Row="2"
            Grid.RowSpan="5"
            Grid.Column="0"
            Margin="5 5"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="{Binding ItemsSource, ElementName=Characters, Converter={StaticResource NullToVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

        <!-- Add / Edit / Overview Grids -->
        <Grid
            Grid.Row="0"
            Grid.RowSpan="5"
            Grid.Column="1"
            Grid.ColumnSpan="4">

            <!-- Add Character UserControl -->
            <Grid 
                Visibility="{Binding Path=AddVMInstance,
                Converter={StaticResource NullToInverseVisibilityConverter}, 
                ConverterParameter='AddVMInstance',
                Mode=TwoWay, 
                UpdateSourceTrigger=PropertyChanged}">
                
                <views:AddView 
                    DataContext="{Binding AddVMInstance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                
            </Grid>
            <!-- This only works when the DataContext of the view is not set explicitly -->
            <!--<views:AddView
                Visibility="{Binding AddVMInstance,
                Converter={StaticResource NullToInverseVisibilityConverter}, 
                ConverterParameter='AddVMInstance',
                Mode=TwoWay, 
                UpdateSourceTrigger=PropertyChanged}" />-->

            <!-- EditMode Grid -->
            <UserControl 
                Visibility="{Binding Path=EditVMInstance,
                Converter={StaticResource NullToInverseVisibilityConverter}, 
                ConverterParameter='EditVMInstance',
                Mode=TwoWay, 
                UpdateSourceTrigger=PropertyChanged}">

                <views:EditView />

            </UserControl>

            <!-- OverviewMode Grid -->
            <!--<views:OverviewView
                Visibility="{Binding OverviewVMInstance, 
                Converter={StaticResource NullToInverseVisibilityConverter}, 
                ConverterParameter='OverviewVMInstance',
                Mode=TwoWay, 
                UpdateSourceTrigger=PropertyChanged}" />-->
            <UserControl 
                Visibility="{Binding Path=OverviewVMInstance,
                Converter={StaticResource NullToInverseVisibilityConverter}, 
                ConverterParameter='OverviewVMInstance',
                Mode=TwoWay, 
                UpdateSourceTrigger=PropertyChanged}">

                <views:OverviewView />

            </UserControl>
            
        </Grid>
        
    </Grid>
    
    
</Window>
